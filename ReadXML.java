import java.io.File;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;
import java.util.*;

class ReadXML{

  public ArrayList<String> globalPermissionsList;

  ReadXML(){
    globalPermissionsList = new ArrayList<>();
  }
  //location contains the location of AndroidManifest.xml file
  public ManifestObject getManifestDataObject(String location, String appName, String category){
    try{
      File manifestFile = new File(location);
      DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
      DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
      Document doc = dBuilder.parse(manifestFile);
      doc.getDocumentElement().normalize();
      //System.out.println("Root element :" + doc.getDocumentElement().getNodeName());
      Node manifest = doc.getDocumentElement();
      NodeList usesPermissionList = doc.getElementsByTagName("uses-permission");
      for(int i=0; i<usesPermissionList.getLength(); i++){
        Node usesPermission = usesPermissionList.item(i);

        String permission = ((Element)usesPermission).getAttribute("android:name");
        int ii=0;
        for(ii=permission.length()-1; ii>=0 ;ii--){
          if(permission.charAt(ii)=='.'){
            break;
          }
        }
        int flagi = 0;
        for(int jj=ii+1; jj<permission.length(); jj++){
        	if(Character.isLetter(permission.charAt(jj)) && (permission.charAt(jj) >= 'a' && permission.charAt(jj) <= 'z') ){
        		flagi = 1;
        		break;
        	}
        }

        String name = permission.substring(ii+1);

		if(flagi == 0){
		  if(!globalPermissionsList.contains(name)){
		    globalPermissionsList.add(name);
		  }
		}
      }

      NodeList name = doc.getElementsByTagName("application");
      String n = ((Element)name.item(0)).getAttribute("android:label");

      if(n.charAt(0)!='@'){
        appName = n;
      }

      ManifestObject manifestObject = new ManifestObject(appName,globalPermissionsList, category);
      return manifestObject;
    } catch(Exception e){
      e.printStackTrace();
    }
    return null;
  }
}
